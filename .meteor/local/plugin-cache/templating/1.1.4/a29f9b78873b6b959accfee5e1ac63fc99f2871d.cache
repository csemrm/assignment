{"head":"","body":"","js":"\nTemplate.__checkName(\"atInput\");\nTemplate[\"atInput\"] = new Template(\"Template.atInput\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"templateName\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  });\n}));\n\nTemplate.__checkName(\"atTextInput\");\nTemplate[\"atTextInput\"] = new Template(\"Template.atTextInput\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return [ \"at-input item item-input item-text-wrap \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showLabels\"));\n      }, function() {\n        return \"item-stacked-label\";\n      }), \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isValidating\"));\n      }, function() {\n        return \"validating\";\n      }), \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasError\"));\n      }, function() {\n        return \"has-error\";\n      }), \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasSuccess\"));\n      }, function() {\n        return \"has-success\";\n      }), \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"feedback\"));\n      }, function() {\n        return \"has-feedback\";\n      }) ];\n    }\n  }, \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showLabels\"));\n  }, function() {\n    return [ \"\\n      \", HTML.LABEL({\n      \"class\": \"input-label\",\n      \"for\": function() {\n        return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n      }\n    }, \"\\n        \", Blaze.View(\"lookup:displayName\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"displayName\")));\n    }), \" \", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"required\"));\n    }, function() {\n      return Blaze.View(\"lookup:optionalText\", function() {\n        return Spacebars.mustache(view.lookup(\"optionalText\"));\n      });\n    }), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n    \", HTML.INPUT({\n    type: function() {\n      return Spacebars.mustache(view.lookup(\"type\"));\n    },\n    id: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    name: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"placeholder\"));\n    },\n    autocapitalize: \"none\",\n    autocorrect: \"off\"\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasIcon\"));\n  }, function() {\n    return [ \"\\n      \", HTML.SPAN({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"iconClass\"));\n      }\n    }), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasError\"));\n  }, function() {\n    return [ \"\\n      \", HTML.SPAN(Blaze.View(\"lookup:errorText\", function() {\n      return Spacebars.mustache(view.lookup(\"errorText\"));\n    })), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"atCheckboxInput\");\nTemplate[\"atCheckboxInput\"] = new Template(\"Template.atCheckboxInput\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"at-input item item-toggle item-text-wrap\"\n  }, \"\\n    \", HTML.LABEL({\n    \"class\": \"toggle toggle-balance\",\n    \"for\": function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  }, \"\\n      \", HTML.INPUT(HTML.Attrs({\n    type: function() {\n      return Spacebars.mustache(view.lookup(\"type\"));\n    },\n    id: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    name: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"disabled\"));\n  })), \"\\n      \", HTML.Raw('<div class=\"track\">\\n        <div class=\"handle\"></div>\\n      </div>'), \"\\n    \"), \"\\n    \", Blaze.View(\"lookup:displayName\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"displayName\")));\n  }), \"\\n  \");\n}));\n\nTemplate.__checkName(\"atSelectInput\");\nTemplate[\"atSelectInput\"] = new Template(\"Template.atSelectInput\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"at-input item item-input item-select item-text-wrap\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"input-label\"\n  }, \"\\n      \", HTML.LABEL({\n    \"for\": function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  }, Blaze.View(\"lookup:displayName\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"displayName\")));\n  })), \"\\n    \"), \"\\n    \", HTML.SELECT({\n    id: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    name: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  }, \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"values\"));\n  }, function() {\n    return [ \"\\n        \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      }\n    }, Blaze.View(\"lookup:text\", function() {\n      return Spacebars.mustache(view.lookup(\"text\"));\n    })), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"atRadioInput\");\nTemplate[\"atRadioInput\"] = new Template(\"Template.atRadioInput\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    \"class\": \"item item-divider\"\n  }, \"\\n    \", Blaze.View(\"lookup:displayName\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"displayName\")));\n  }), \"\\n  \"), \"\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"values\"));\n  }, function() {\n    return [ \"\\n    \", HTML.LABEL({\n      \"class\": \"at-input item item-radio item-text-wrap\"\n    }, \"\\n      \", HTML.INPUT({\n      id: function() {\n        return [ \"at-field-\", Spacebars.mustache(view.lookup(\"id\")), \"-choice-\", Spacebars.mustache(view.lookup(\"value\")) ];\n      },\n      type: \"radio\",\n      name: function() {\n        return [ \"at-field-\", Spacebars.mustache(view.lookup(\"id\")) ];\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      }\n    }), \"\\n      \", HTML.DIV({\n      \"class\": \"item-content\"\n    }, Blaze.View(\"lookup:text\", function() {\n      return Spacebars.mustache(view.lookup(\"text\"));\n    })), \"\\n      \", HTML.I({\n      \"class\": \"radio-icon ion-checkmark\"\n    }), \"\\n    \"), \"\\n  \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"atHiddenInput\");\nTemplate[\"atHiddenInput\"] = new Template(\"Template.atHiddenInput\", (function() {\n  var view = this;\n  return HTML.INPUT({\n    type: \"hidden\",\n    id: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    },\n    name: function() {\n      return [ \"at-field-\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  });\n}));\n","bodyAttrs":{}}